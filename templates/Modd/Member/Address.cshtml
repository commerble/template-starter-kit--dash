@{
    var address = Page.ViewData.Model as UserAddress;
    var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages;
    var action = Page.Url.RouteUrl("ModdDefault", new {controller="Member", action=address.AddressId == 0 ? "CreateAddress" : "Addresses", id=address.AddressId == 0 ? "" : address.AddressId.ToString()} );

    ViewBag.PageTitle = "お届け先登録";
}
@DisplayViewMessages(viewData)

<div class="section">
    <div class="inner">
        <div class="formWrapper">
            <form action="@action" method="post">
                @Page.Html.SessionAntiForgeryToken()
                <section class="formSection">
                    <h2 id="destination" class="formSectionTitle">お届け先</h2>
                    <dl class="formBlock required">
                        <dt class="formBlockTitle">お届け先名</dt>
                        <dd class="formBlockBody">
                            <div class="formItem">
                                @Page.Html.TextBox("AddressName",address.AddressName ?? "", new {
                                    data_val = "true",
                                    data_val_length = "お届け先名は10文字以内で入力してください。",
                                    data_val_length_maxlength = "10"})
                            </div>
                            @ValidationMessageFor("AddressName")
                        </dd>
                    </dl>
                    @Page.Html.PartialEx("ModdSharedAddressEditor", address.Address, new {
                        target = "Address", 
                        command = "zipsearch", 
                        commandUrl = action
                    })
                </section>
                @if (address.AddressId == 0) {
                    <div class="buttonContainer">
                        <button type="submit" class="btCallToAction btLargeSize btNext" name="create" value="post">登録する</button>
                    </div>
                }
                else {
                    <div class="buttonContainer">
                        <button type="submit" class="btCallToAction btLargeSize btNext" name="update" value="post">変更する</button>
                    </div>
                    <div class="buttonContainer">
                        <button type="submit" class="btPrimary btNext" name="delete" value="post">削除する</button>
                    </div>
                }
                <div class="buttonContainer">
                    <a href="@Page.Url.RouteUrl("ModdDefault", new { controller="Member", action="Addresses", id=(int?)null })" class="btPrimary btNormalSize btPrev">お届け先一覧へもどる</a>
                </div>
            </form>
        </div>
    </div>
</div>

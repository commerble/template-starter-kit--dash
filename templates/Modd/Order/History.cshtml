@{
    var cart = Page.ViewData.Model as HistoryCart; 
    var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages;
    var canPaymentMethodChange = cart.CanModifyPaymentMethod();
    var hasChanges = cart.Original != null && (
            cart.Original.PaymentMethod != cart.PaymentMethod
        ||  cart.Original.OrderCustomer.PaymentDetail != cart.OrderCustomer.PaymentDetail
        ||  cart.Original.OrderCustomer.EmailAddr != cart.OrderCustomer.EmailAddr
        ||  cart.Original.DeliveryOrderAddress.ToString() != cart.DeliveryOrderAddress.ToString()
        ||  cart.Original.DeliveryOrderAddress.Tel != cart.DeliveryOrderAddress.Tel
        ||  cart.Original.DeliveryOrderAddress.Recipientlastname != cart.DeliveryOrderAddress.Recipientlastname
        ||  cart.Original.DeliveryOrderAddress.Recipientfirstname != cart.DeliveryOrderAddress.Recipientfirstname
        ||  cart.Original.DeliveryOrderAddress.Recipientlastnamekana != cart.DeliveryOrderAddress.Recipientlastnamekana
        ||  cart.Original.DeliveryOrderAddress.Recipientfirstnamekana != cart.DeliveryOrderAddress.Recipientfirstnamekana
        ||  cart.Original.DeliveryOrder.DeliveryDate != cart.DeliveryOrder.DeliveryDate
        ||  cart.Original.DeliveryOrder.HourRange != cart.DeliveryOrder.HourRange
        ||  cart.Original.DeliveryOrder.WrappingType != cart.DeliveryOrder.WrappingType
        ||  cart.Original.DeliveryOrder.SenderName != cart.DeliveryOrder.SenderName
        ||  cart.Original.ServiceValues.Keys.Any(key => cart.Original.ServiceValues[key] != cart.ServiceValues[key])
    );

    ViewBag.PageTitle = "購入履歴 - 詳細";
}

<main class="section content">
    <h1 class="h-underline">購入履歴</h1>
    @DisplayViewMessages(viewData)
    @if (hasChanges) {
        <div class="alert alert-success">
            <p><strong>注文変更はまだ確定されていません。他の項目を編集し、「注文を変更する」ボタンから変更を確定してください。</strong></p>
        </div>
        <form action="@HistoryUrl(cart.OrderId)" method="post">
            @Page.Html.SessionAntiForgeryToken()
            @Page.Html.HttpMethodOverride("put")
            @if(cart.CanModify || cart.CanModifyPaymentMethod()) {
                <div class="block block-vertical">
                    <button type="submit" name="commit" value="commit" class="btn btn-action">注文を変更する</button>
                </div>
            }
        </form>
    }
    <form action="@HistoryUrl(cart.OrderId)" method="post">
        @Page.Html.PartialEx("ModdSharedCartItems", cart, new { action=false })
        <h2 class="h-title">お客様情報</h3>
        <dl class="field">
            <dt class="field-title">氏名（フリガナ）</dt>
            <dd class="field-body">
                <p class="field-text">@(cart.OrderCustomer.LastName + cart.OrderCustomer.FirstName) / @(cart.OrderCustomer.LastNameKana + @cart.OrderCustomer.FirstNameKana)</p>
            </dd>
        </dl>
        <dl class="field">
            <dt class="field-title">住所</dt>
            <dd class="field-body">
                <p class="field-text">@cart.OrderCustomerOrderedAddress.ToString()</p>
            </dd>
        </dl>
        <dl class="field">
            <dt class="field-title">電話番号</dt>
            <dd class="field-body">
                <p class="field-text">@cart.OrderCustomerOrderedAddress.Tel</p>
            </dd>
        </dl>
        <dl class="field">
            <dt class="field-title">メールアドレス</dt>
            <dd class="field-body">
                <p class="field-text">@cart.OrderCustomer.EmailAddr</p>
            </dd>
        </dl>
        @if(cart.CanModify) {
            <div class="block block-horizontal block-right">
                <button type="submit" name="customer" value="post" class="btn btn-primary btn-text btn-next">お客様情報を変更する</button>
            </div>
        }
        <h2 class="h-title">お届け先</h3>
        <dl class="field">
            <dt class="field-title">氏名 / フリガナ</dt>
            <dd class="field-body">
                <p class="field-text"> @(cart.DeliveryOrderAddress.Recipientlastname + cart.DeliveryOrderAddress.Recipientfirstname) / @(cart.DeliveryOrderAddress.Recipientlastnamekana + @cart.DeliveryOrderAddress.Recipientfirstnamekana)</p>
            </dd>
        </dl>
        <dl class="field">
            <dt class="field-title">住所</dt>
            <dd class="field-body">
                <p class="field-text">@cart.DeliveryOrderAddress.ToString()</p>
            </dd>
        </dl>
        <dl class="field">
            <dt class="field-title">電話番号</dt>
            <dd class="field-body">
                <p class="field-text">@cart.DeliveryOrderAddress.Tel</p>
            </dd>
        </dl>
        @if(cart.CanModify) {
            <div class="block block-horizontal block-right">
                <button type="submit" name="shipping" value="post" class="btn btn-primary btn-text btn-next">お届け先を変更する</button>
            </div>
        }
        <h2 class="h-title">お届け日時</h3>
        <dl class="field">
            <dt class="field-title">お届け日</dt>
            <dd class="field-body">
                <p class="field-text">
                    @if (cart.DeliveryOrder.DeliveryDate.HasValue) {
                        <text>@PrintDate(cart.DeliveryOrder.DeliveryDate.Value)</text>
                    } 
                    else if (cart.LastReleaseDate > DateTime.Now) {
                        <text>
                            発売日が異なる商品を同時（同一ご注文番号の場合）にご予約いただいた場合、<br/>
                            発売日が最も遅い商品に合わせて全ての商品をお届けいたします。
                        </text>
                    } else {
                        <text>最短でお届け</text>
                    }
                </p>
            </dd>
        </dl>
        <dl class="field">
            <dt class="field-title">お届け時間</dt>
            <dd class="field-body">
                <p class="field-text">
                    @if (!string.IsNullOrEmpty(cart.DeliveryOrder.HourRange)) {
                        @ViewExtensions.HourRanges[cart.DeliveryOrder.HourRange]
                    } else {
                        <text>指定なし</text>
                    }
                </p>
            </dd>
        </dl>
        @if(cart.CanModify) {
            <div class="block block-horizontal block-right">
                <button type="submit" name="delivery" value="post" class="btn btn-primary btn-text btn-next">お届け日時を変更する</button>
            </div>
        }
        <h2 class="h-title">お支払方法</h3>
        <dl class="field">
            <dt class="field-title">決済方法</dt>
            <dd class="field-body">
                <p class="field-text">@PaymentMethodText[cart.PaymentMethod]</p>
            </dd>
        </dl>
        @if(cart.CanModify) {
            <div class="block block-horizontal block-right">
                <button type="submit" name="payment" value="post" class="btn btn-primary btn-text btn-next">お支払方法を変更する</button>
            </div>
        }
        <h2 class="h-title">備考</h3>
        <dl class="field">
            <dt class="field-title">備考内容</dt>
            <dd class="field-body">
                <p class="field-text">@(cart.ServiceValues.ContainsKey("Remarks") && !string.IsNullOrEmpty(cart.ServiceValues["Remarks"]) ? cart.ServiceValues["Remarks"] : "なし")</p>
            </dd>
        </dl>
    </form>
    <form action="@HistoryUrl(cart.OrderId)" method="post">
        @Page.Html.SessionAntiForgeryToken()
        @Page.Html.HttpMethodOverride("put")
        <div class="block block-vertical">
            @if(hasChanges && (cart.CanModify || cart.CanModifyPaymentMethod())) {
                <button type="submit" name="commit" value="commit" class="btn btn-action btn-next">注文を変更する</button>
            }
            @if (!cart.OrderCustomer.IsGuest) {
                <a href="@HistoryUrl()" class="btn btn-primary btn-text btn-prev">購入履歴一覧へもどる</a>
            }
            @if (cart.CanCancel) {
                <a href="@CancelUrl(cart.OrderId)" class="btn btn-danger btn-text">注文をキャンセルする</a>
            }
        </div>
    </form>
</main>

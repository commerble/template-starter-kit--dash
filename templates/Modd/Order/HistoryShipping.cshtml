@{
    var shipping = Page.ViewData.Model as VM.HistoryShipping;
    var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages;

    ViewBag.MetaTitle = "注文編集 - お届け先";
}
<main class="section content">
    <h1 class="h-underline">お届け先</h1>
    @DisplayViewMessages(viewData)
    <form action="@HistoryShippingUrl(shipping.Cart.OrderId)" method="post">
        @Page.Html.HttpMethodOverride("put")
        <dl class="field required">
            <dt class="field-title">お届け先選択</dt>
            <dd class="field-body">
                @if(!shipping.IsAnonymous) {
                    @:@Page.Html.DropDownList("DeliveryOrderAddress.AddressId", shipping.MemberAddressList.ToSelectListItems(shipping.IsAnonymous, shipping.DeliveryOrderAddress.AddressId), new {
                        ic_action="selectAddress" 
                    })
                }
            </dd>
        </dl>
        @Page.Html.PartialEx("ModdSharedAddressEditor", shipping.DeliveryOrderAddress, new {
            target = "DeliveryOrderAddress", 
            command = "zipsearch", 
            commandUrl = HistoryShippingUrl(shipping.Cart.OrderId),
            commandMethod = "put"
        })
        <div class="block block-vertical">
            <button type="submit" class="btn btn-action btn-large btn-next" name="shipping" value="put">お届け先を変更</button>
            <a href="@HistoryUrl(shipping.Cart.OrderId)" class="btn btn-primary btn-text btn-prev">注文詳細へもどる</a>
        </div>
    </form>
</main>

@section ScriptBlock {
<script type="application/json" id="member-addresses">@Raw(shipping.MemberAddressList.ToJson(shipping.IsAnonymous))</script>
}
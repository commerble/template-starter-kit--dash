@{
  var shipping = Page.ViewData.Model as VM.PurchaseShipping; 
  var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages;
  var hasDestination = !string.IsNullOrEmpty(shipping.DeliveryOrderAddress.ToString());

  ViewBag.PageTitle = "カート - 配送情報";
}
<main class="section content">
    <h1 class="h-underline">購入</h1>
    @DisplayViewMessages(viewData)
    <form action="@PurchaseShippingUrl(shipping.CartId)" method="post">
        <h2 class="h-title">お客様情報</h2>
        @if(shipping.IsAnonymous) {
            @:@Page.Html.PartialEx("ModdSharedAddressEditor", shipping.OrderCustomerOrderedAddress, new {
                target = "OrderCustomerOrderedAddress", 
                command ="zipsearch_customer", 
                commandUrl = PurchaseShippingUrl(shipping.CartId)
            })
        }
        else if (shipping.User.Account.ExtendProperties.AddressId == 0) {
            @:@Page.Html.PartialEx("ModdSharedAddressEntry", shipping.OrderCustomerOrderedAddress, new {
                target = "OrderCustomerOrderedAddress", 
                command = "zipsearch_customer", 
                commandUrl = PurchaseShippingUrl(shipping.CartId)
            })
        }
        else {
            @:@Page.Html.Partial("ModdSharedAddressDisplay", shipping.OrderCustomerOrderedAddress)
        }
        <dl class="field required">
            <dt class="field-title">メールアドレス</dt>
            <dd class="field-body">
                @Page.Html.TextBox("Customer.EmailAddr", shipping.Customer.EmailAddr, new {
                    type = "email",
                    placeholder = "例）xxxxxx@commerble.com",
                    data_val = "true",
                    data_val_required="メールアドレスは必須項目です。",
                    data_val_email="メールアドレスをご入力ください。"
                })
                @ValidationMessageFor("Customer.EmailAddr")
                <p class="field-note">ドメイン受信拒否機能を設定されている方は&nbsp;commerble.com&nbsp;からの受信許可を設定してください。 </p>
            </dd>
        </dl>
        <template id="destination-tmpl">
            <h2 class="h-title">お届け先</h2>
            <dl class="field required">
                <dt class="field-title">お届け先選択</dt>
                <dd class="field-body">
                    @if(!shipping.IsAnonymous) {
                        @:@Page.Html.DropDownList("DeliveryOrderAddress.AddressId", shipping.MemberAddressList.ToSelectListItems(shipping.IsAnonymous, shipping.DeliveryOrderAddress.AddressId), new {
                            ic_action="selectAddress" 
                        })
                    }
                </dd>
            </dl>
            @Page.Html.PartialEx("ModdSharedAddressEditor", shipping.DeliveryOrderAddress, new {
                target = "DeliveryOrderAddress", 
                command = "zipsearch_shipping", 
                commandUrl = PurchaseShippingUrl(shipping.CartId)
            })
            
            <div class="block block-horizontail block-wrap">
                <button type="submit" class="btn btn-action btn-large btn-next" name="next" value="go">お支払い方法の指定に進む</button>
                <button type="submit" class="btn btn-primary btn-ghost btn-large" name="next_copy" value="go">お客様住所へお届け</button>
            </div>
            <div class="block">
                <a href="@CartUrl()" class="btn btn-primary btn-text btn-prev">数量を選び直す</a>
            </div>
        </template>

        <div id="destination" @when(hasDestination, "ic-get-from=#destination-tmpl ic-trigger-on=load")>
            <div class="block block-horizontal block-wrap">
                <button type="submit" class="btn btn-action btn-large btn-next" name="@(hasDestination?"next":"next_copy")" value="go">お支払い方法の指定に進む</button>
                <button type="button" class="btn btn-primary btn-ghost btn-large" ic-get-from="#destination-tmpl" ic-target="#destination" ic-swap-style="replace">お届け先を別に指定する</button>
            </div>
            <div class="block">
                <a href="@CartUrl()" class="btn btn-primary btn-text btn-prev">数量を選び直す</a>
            </div>
        </div>
    </form>
</main>


@section ScriptBlock {
<script type="text/javascript">
(function() {
    var addrs = @Raw(shipping.MemberAddressList.ToJson(shipping.IsAnonymous));
    $.fn.selectAddress = function () {
        var id = $(this).val();
        var addr = addrs.find(a => a.AddressId+"" == id);
            
        if(addr == null)
            return;
            
        $("#DeliveryOrderAddress_Recipientfirstname").val(addr.Recipientfirstname || "");
        $("#DeliveryOrderAddress_Recipientlastname").val(addr.Recipientlastname || "");
        $("#DeliveryOrderAddress_Recipientfirstnamekana").val(addr.Recipientfirstnamekana || "");
        $("#DeliveryOrderAddress_Recipientlastnamekana").val(addr.Recipientlastnamekana || "");
        $("#DeliveryOrderAddress_ZipCode").val(addr.ZipCode || "");
        $("#DeliveryOrderAddress_Pref").val(addr.Pref || "");
        $("#DeliveryOrderAddress_City").val(addr.City || "");
        $("#DeliveryOrderAddress_Street").val(addr.Street || "");
        $("#DeliveryOrderAddress_Building").val(addr.Building || "");
        $("#DeliveryOrderAddress_Tel").val(addr.Tel || "");
    }
}())
</script>
}

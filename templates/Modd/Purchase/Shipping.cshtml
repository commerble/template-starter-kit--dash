@{
  var shipping = Page.ViewData.Model as VM.PurchaseShipping; 
  var viewData = Page.ViewData[BasicController.ViewMessageKey] as ViewMessages;
  var hasDestination = !string.IsNullOrEmpty(shipping.DeliveryOrderAddress.ToString());

  ViewBag.PageTitle = "カート - 配送情報";
}
<ol class="stepNavigation">
    <li class="stepNavigationItem active"><span>配送情報</span></li>
    <li class="stepNavigationItem"><span>お支払い方法</span></li>
    <li class="stepNavigationItem"><span>内容確認</span></li>
    <li class="stepNavigationItem"><span>注文完了</span></li>
</ol>

@DisplayViewMessages(viewData)

<div class="section">
    <div class="inner">
        <div class="formWrapper">
            <form action="@Page.Url.RouteUrl("ModdPurchase", new {cart=shipping.CartId, action="Shipping"} )" method="post">
                <section class="formSection">
                    <h2 id="customer" class="formSectionTitle">お客様情報</h2>
                    @if(shipping.IsAnonymous) {
                        @:@Page.Html.PartialEx("ModdSharedAddressEditor", shipping.OrderCustomerOrderedAddress, new {
                            target = "OrderCustomerOrderedAddress", 
                            command ="zipsearch_customer", 
                            commandUrl = Page.Url.RouteUrl("ModdPurchase", new {cart=shipping.CartId, action="Shipping"})
                        })
                    }
                    else if (shipping.User.Account.ExtendProperties.AddressId == 0) {
                        @:@Page.Html.PartialEx("ModdSharedAddressEntry", shipping.OrderCustomerOrderedAddress, new {
                            target = "OrderCustomerOrderedAddress", 
                            command = "zipsearch_customer", 
                            commandUrl = Page.Url.RouteUrl("ModdPurchase", new {cart=shipping.CartId, action="Shipping"})
                        })
                    }
                    else {
                        @:@Page.Html.Partial("ModdSharedAddressDisplay", shipping.OrderCustomerOrderedAddress)
                    }
                    <dl class="formBlock required">
                        <dt class="formBlockTitle">メールアドレス</dt>
                        <dd class="formBlockBody">
                            <div class="formItem">
                                @Page.Html.TextBox("Customer.EmailAddr", shipping.Customer.EmailAddr, new {
                                    placeholder = "例）xxxxxx@commerble.com",
                                    data_val = "true",
                                    data_val_required="メールアドレスは必須項目です。",
                                    data_val_email="メールアドレスをご入力ください。"
                                })
                            </div>
                            @ValidationMessageFor("Customer.EmailAddr")
                            <p class="inputNote">ドメイン受信拒否機能を設定されている方は&nbsp;commerble.com&nbsp;からの受信許可を設定してください。 </p>
                        </dd>
                    </dl>
                </section>

                <template id="destination-tmpl">
                    <section class="formSection">
                        <h2 id="destination" class="formSectionTitle">お届け先</h2>
                        <dl class="formBlock required">
                            <dt class="formBlockTitle">お届け先選択</dt>
                            <dd class="formBlockBody">
                                <div class="formItem">
                                    @if(!shipping.IsAnonymous) {
                                        @:@Page.Html.DropDownList("DeliveryOrderAddress.AddressId", shipping.MemberAddressList.ToSelectListItems(shipping.IsAnonymous, shipping.DeliveryOrderAddress.AddressId), new {
                                            ic_action="selectAddress" 
                                        })
                                    }
                                </div>
                            </dd>
                        </dl>
                        @Page.Html.PartialEx("ModdSharedAddressEditor", shipping.DeliveryOrderAddress, new {
                            target = "DeliveryOrderAddress", 
                            command = "zipsearch_shipping", 
                            commandUrl = Page.Url.RouteUrl("ModdPurchase", new { cart=shipping.CartId, action="Shipping" })
                        })
                    </section>
                    
                    <div class="buttonContainer">
                        <button type="submit" class="btCallToAction btLargeSize btNext" name="next" value="go">お支払い方法の指定に進む</button>
                        <button type="submit" class="btPrimary btLargeSize btNext" name="next_copy" value="go">お客様住所へお届け</button>
                    </div>
                    <div class="buttonContainer">
                        <a href="@Page.Url.RouteUrl("ModdDefault", new { Controller="Order",Action="Cart"})" class="btPrimary btNormalSize btPrev">数量を選び直す</a>
                    </div>
                </template>

                <div id="destination" @when(hasDestination, "ic-get-from=#destination-tmpl ic-trigger-on=load")>
                    <div class="buttonContainer">
                        <button type="submit" class="btCallToAction btLargeSize btNext" name="@(hasDestination?"next":"next_copy")" value="go">お支払い方法の指定に進む</button>
                        <button type="button" class="btPrimary btLargeSize btNext" ic-get-from="#destination-tmpl" ic-target="#destination" ic-swap-style="replace">お届け先を別に指定する</button>
                    </div>
                    <div class="buttonContainer">
                        <a href="@Page.Url.RouteUrl("ModdDefault", new { Controller="Order",Action="Cart"})" class="btPrimary btNormalSize btPrev">数量を選び直す</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section ScriptBlock {
<script type="text/javascript">
(function() {
    var addrs = @Raw(shipping.MemberAddressList.ToJson(shipping.IsAnonymous));
    $.fn.selectAddress = function () {
        var id = $(this).val();
        var addr = addrs.find(a => a.AddressId+"" == id);
            
        if(addr == null)
            return;
            
        $("#DeliveryOrderAddress_Recipientfirstname").val(addr.Recipientfirstname || "");
        $("#DeliveryOrderAddress_Recipientlastname").val(addr.Recipientlastname || "");
        $("#DeliveryOrderAddress_Recipientfirstnamekana").val(addr.Recipientfirstnamekana || "");
        $("#DeliveryOrderAddress_Recipientlastnamekana").val(addr.Recipientlastnamekana || "");
        $("#DeliveryOrderAddress_ZipCode").val(addr.ZipCode || "");
        $("#DeliveryOrderAddress_Pref").val(addr.Pref || "");
        $("#DeliveryOrderAddress_City").val(addr.City || "");
        $("#DeliveryOrderAddress_Street").val(addr.Street || "");
        $("#DeliveryOrderAddress_Building").val(addr.Building || "");
        $("#DeliveryOrderAddress_Tel").val(addr.Tel || "");
    }
}())
</script>
}

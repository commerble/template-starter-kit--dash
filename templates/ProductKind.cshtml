@functions {
    public class ViewModel {
        public string Code { get; set; }
        public string GroupCode { get; set; }
        public string Name { get; set; }
        public string Title { get; set; }
        public string Body { get; set;}
        public string Hero { get; set;}
        public string MetaTitle { get ;set; }
        public string MetaDescription { get ;set; }
        public string MetaImage { get ;set; }
    }

    ViewModel LoadViewModel() {
        var code = ((string)ViewBag.Code)?.ToLower();
        return Database.Single(new { Now, Next, IsPreview, code }, (db, args) => (
                from k in db.ProductKinds
                where k.Code.ToLower() == args.code
                  && (k.IsPublished || args.IsPreview)
                select new ViewModel {
                    Code = k.Code,
                    GroupCode = k.GroupCode,
                    Name = string.IsNullOrEmpty(k.DisplayName) ? k.Name : k.DisplayName,
                    Title = k.Title,
                    Body = k.Body,
                    Hero = k.Hero,
                    MetaTitle = k.MetaTitle,
                    MetaDescription = k.MetaDescription,
                    MetaImage = k.MetaImage
                }
            ).FirstOrDefault());
    }
}

@{
    var vm = LoadViewModel();

    if (vm == null) {
        throw new System.Web.HttpException(404, "Not Found");
    }

    ViewBag.MetaTitle = vm.MetaTitle ?? vm.Name ?? "カテゴリ";
    ViewBag.MetaDescription = vm.MetaDescription;
    ViewBag.MetaImage = vm.MetaImage;
    ViewBag.JsonLd = new[] {
        new Dictionary<string, object> {
            ["@context"] = "https://schema.org/",
            ["@type"] = "BreadcrumbList",
            ["itemListElement"] = new [] {
                new Dictionary<string, object> {
                    ["@type"] = "ListItem",
                    ["position"] = 1,
                    ["name"] = "Top",
                    ["item"] = Page.Template.SecuredHost(true) + Href("~/")
                },
                new Dictionary<string, object> {
                    ["@type"] = "ListItem",
                    ["position"] = 2,
                    ["name"] = vm.Name,
                    ["item"] = Page.Template.SecuredHost(true) + Page.Request.Url.AbsolutePath
                },
            }
        }
    };
}
@if (Page.Request.QueryString["page"] == null && !string.IsNullOrEmpty(vm.Hero)) {
    <div class="image image-hero">
        <img src="@ImageUrl(vm.Hero)" alt="@vm.Name" loading="lazy" decoding="async">
    </div>
}
<main class="section content-wide">
    <h1 class="h-underline text-center">
        @if (!string.IsNullOrEmpty(vm.GroupCode)) {
            @vm.GroupCode <br>
        } 
        @PrintTitleOrName(vm.Title, vm.Name)
    </h1>
    @if (Page.Request.QueryString["page"] == null && !string.IsNullOrEmpty(vm.Body)) {
        <div class="article">
            @Raw(vm.Body)
        </div>
        <hr>
    }
    @Include("ProductList", new Dictionary<string, object> {
        ["kinds"] = new []{ vm.Code }
    })
</main>
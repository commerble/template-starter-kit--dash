$.fn.replaceMainImage = function() {
    const img = this.is('img') ? this : $('img', this);
    const src = img.attr('data-src');
    const alt = img.attr('alt');
    $('.productImageMainItem img').attr({ src:src, alt:alt });
    $('.productImageSubItem.active').removeClass('active');
    $(this).closest('.productImageSubItem').addClass('active');
}

$.fn.prevMainImage = function() {
    const mainImage = $('.productImageMainItem img');
    const subImages = $('.productImageSubItem img');
    const src = mainImage.attr('src');
    for (var i = 0; i < subImages.length ; i++){
        const img = subImages[i];
        if (img.dataset.src == src || img.src == src) {
            $(subImages[(subImages.length + i - 1) % subImages.length]).replaceMainImage();
            break;
        }
    }
}

$.fn.nextMainImage = function() {
    const mainImage = $('.productImageMainItem img');
    const subImages = $('.productImageSubItem img');
    const src = mainImage.attr('src');
    for (var i = 0; i < subImages.length ; i++){
        const img = subImages[i];
        if (img.dataset.src == src || img.src == src) {
            $(subImages[(i + 1) % subImages.length]).replaceMainImage();
            break;
        }
    }
}

$.fn.showRecalc = function() {
    $('.btNext').hide();
    $('.btRecalc').show();
}

$.fn.toZenkaku = function() {
    $(this).val(($(this).val() || '').replace(/[A-Za-z0-9&\(\)\- ]/g, function (s) {
        return s === ' ' ? 'ã€€' : String.fromCharCode(s.charCodeAt(0) + 65248);
    }));
}

$.fn.removeSpace = function() {
    $(this).val(($(this).val() || '').replace(/\s/g, ''));
}

$.fn.validateForce = function() {
    $(this).closest('form').validate().element(this);
}

$.fn.togglePasswordMask = function () {
    $(this).toggleClass('fa-eye');
    $(this).toggleClass('fa-eye-slash');
    $(this).siblings('input').each(function(i,input){
        input.type = input.type == 'password' ? 'text' : 'password';
    })
}

$.fn.toggleTab = function (tabBody) {
    $(this).closest('.tabListItem').toggleClass('active').siblings().removeClass('active');
    $(tabBody).toggleClass('active').siblings().removeClass('active');
}

$('body').on('click', 'a[data-gtm]', function(e) {
    if (window.google_tag_manager) {
        e.preventDefault();
    }
    const href = $(this).attr('href');
    const json = $(this).attr('data-gtm');
    const data = JSON.parse(json);
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push(Object.assign(data, {
        eventCallback: function() {
            document.location = href;
        }
    }));
})

$('body').on('click', '[type="submit"][data-gtm]', function(e) {
    if (window.google_tag_manager) {
        e.preventDefault();
    }
    const name = $(this).attr('name');
    const value = $(this).val();
    const form = $(this).closest('form');
    const json = $(this).attr('data-gtm');
    const data = JSON.parse(json);
    window.dataLayer = window.dataLayer || [];
    window.dataLayer.push(Object.assign(data, {
        eventCallback: function() {
            const input = document.createElement('input');
            input.type = "hidden";
            input.name = name,
            input.value = value;
            form.append(input);
            form.submit();
        }
    }));
})

$('body').on('click', '[type="submit"][data-gtm-radio]', function(e) {
    const radio = $(this).attr('data-gtm-radio');
    const checked = $('[name="' + radio + '"]:checked');
    if (checked.length > 0) {
        if (window.google_tag_manager) {
            e.preventDefault();
        }
        const name = $(this).attr('name');
        const value = $(this).val();
        const form = $(this).closest('form');
        const json = checked.attr('data-gtm');
        const data = JSON.parse(json);
        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push(Object.assign(data, {
            eventCallback: function() {
                const input = document.createElement('input');
                input.type = "hidden";
                input.name = name,
                input.value = value;
                form.append(input);
                form.submit();
            }
        }));
    }
})
